dwm - dynamic window manager
============================
dwm is an extremely fast, small, and dynamic window manager for X.

Tasks to Complete
-----------------
1. Update the status bar on all monitors, even if not active, rather
   than only on the active monitor.
2. Pulling up Tag 0 automatically switches to grid-view
3. Pulling up Tag 0 operates on all monitors, not just the active one.
   Leaving Tag 0 on one monitor leaves it on all of them
4. Clean rebuild. There are surely some patches that I applied
   but do not use. Rebuilding from the ground up would result in
   a cleaner code-base.
5. Update the man-page to reflect usage.
6. Update Makefile to suppress common warnings (like unused functions)

Long-term Goals
---------------
* Centralize code across the suckless utilities that I use,
  do I really need two XRBD implementations, two font-rendering
  implementations, etc., for dwm and dmenu?

Requirements
------------
In order to build dwm you need the Xlib header files.


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install


Running dwm
-----------
Add the following line to your .xinitrc to start dwm using startx:

    exec dwm

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done &
    exec dwm


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.
